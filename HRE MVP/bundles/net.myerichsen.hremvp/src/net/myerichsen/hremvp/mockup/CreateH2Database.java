package net.myerichsen.hremvp.mockup;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.SubMonitor;

import net.myerichsen.hremvp.HreH2ConnectionPool;

public class CreateH2Database {
	private static final Logger LOGGER = Logger.getLogger("global");

	private final SubMonitor subMonitor;
	private Connection conn;
	private Statement stmt;
	private String[] statementArray = {
			"CREATE TABLE NAMEDICTIONARY ( UID INTEGER NOT NULL, XVALUE VARCHAR(32672), SDX CHAR(4), TT CHAR(1) );",
			"CREATE TABLE DATASET ( DSID INTEGER NOT NULL, DSNAME CHAR(100), DSLOCATION CHAR(253), DSTYPE NUMERIC(2 , 0), DSLOCKED CHAR(1), DSENABLED CHAR(1), PROPERTY VARCHAR(32672), DSP VARCHAR(32672), DSP2 VARCHAR(32672), TT CHAR(1), DCOMMENT VARCHAR(32672), HOST BLOB, NAMESTYLE INTEGER, PLACESTYLE INTEGER );",
			"CREATE TABLE REPOSITORY ( DSID INTEGER NOT NULL, NAME VARCHAR(32672), RECNO INTEGER NOT NULL, REF_ID INTEGER, ABBREV CHAR(50), ADDRESS INTEGER, RNOTE VARCHAR(32672), RPERNO INTEGER, ISPICKED CHAR(1), TT CHAR(1) );",
			"CREATE TABLE FOCUSGROUPMEMBER ( GROUPNUM INTEGER NOT NULL, MEMBERNUM INTEGER NOT NULL, TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE TABLE SOURCETYPE ( RULESET NUMERIC(1 , 0) NOT NULL, DSID INTEGER, SOURTYPE INTEGER NOT NULL, TRANS_TO INTEGER, NAME CHAR(66), FOOT VARCHAR(32672), SHORT VARCHAR(32672), BIB VARCHAR(32672), CUSTFOOT VARCHAR(32672), CUSTSHORT VARCHAR(32672), CUSTBIB VARCHAR(32672), SAMEAS INTEGER, SAMEASMSG VARCHAR(32672), XPRIMARY CHAR(1), REMINDERS VARCHAR(32672), TT CHAR(1) );",
			"CREATE TABLE NAMEPARTTYPE ( ID INTEGER NOT NULL, XVALUE CHAR(100), SYSTEM CHAR(1), TYPE INTEGER, SHORTVALUE CHAR(20), TT CHAR(1), DSID INTEGER NOT NULL, TEMPLATE CHAR(30) );",
			"CREATE TABLE EXHIBIT ( IDEXHIBIT INTEGER NOT NULL, IDREF INTEGER, RLTYPE CHAR(1), RLNUM INTEGER, XNAME CHAR(30), VFILENAME CHAR(4), IFILENAME VARCHAR(32672), AFILENAME VARCHAR(32672), TFILENAME VARCHAR(32672), REFERENCE CHAR(25), TEXT VARCHAR(32672), IMAGE BLOB, AUDIO VARCHAR(32672), DESCRIPT VARCHAR(32672), RLPER1 INTEGER NOT NULL, RLPER2 INTEGER, RLGTYPE INTEGER, OLE_OBJECT VARCHAR(32672), XPRIMARY CHAR(1), VIDEO VARCHAR(32672), PROPERTY VARCHAR(32672), DSID INTEGER NOT NULL, TT CHAR(1), ID_PERSON INTEGER, RECNO INTEGER, ID_EVENT INTEGER, ID_SOURCE INTEGER, ID_REPOS INTEGER, THUMB VARCHAR(32672), ID_CIT INTEGER, ID_PLACE INTEGER, CAPTION VARCHAR(32672), SORTEXH INTEGER, IMAGEFORE VARCHAR(32672), IMAGEBACK VARCHAR(32672), TRANSPAR NUMERIC(5 , 0) );",
			"CREATE TABLE SOURCE ( MACTIVE CHAR(1), MAJNUM INTEGER NOT NULL, REF_ID INTEGER, ABBREV CHAR(50), DEFSURE CHAR(1), TITLE VARCHAR(32672), TYPE NUMERIC(3 , 0), RECORDER NUMERIC(2 , 0), MEDIA NUMERIC(2 , 0), FIDELITY NUMERIC(2 , 0), INDEXED NUMERIC(1 , 0), STATUS NUMERIC(2 , 0), TEXT VARCHAR(32672), SPERNO INTEGER, ISPICKED CHAR(1), INFO VARCHAR(32672), FFORM VARCHAR(32672), SFORM VARCHAR(32672), BFORM VARCHAR(32672), CITED CHAR(1), IBIDTYPE NUMERIC(1 , 0), SUBJECTID INTEGER, COMPILERID INTEGER, EDITORID INTEGER, SPERNO2 INTEGER, UNCITEDFLD VARCHAR(32672), CUSTTYPE INTEGER, FIRSTCD VARCHAR(32672), DSID INTEGER NOT NULL, REMINDERS VARCHAR(32672), TT CHAR(1) );",
			"CREATE TABLE FOCUSGROUP ( GROUPNUM INTEGER NOT NULL, GROUPNAME CHAR(40), RECENT CHAR(1), TT CHAR(1) );",
			"CREATE TABLE PLACEPARTTYPE ( ID INTEGER NOT NULL, TYPE INTEGER, XVALUE CHAR(100), SYSTEM CHAR(1), SHORTVALUE CHAR(20), TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE TABLE STYLE ( STYLEID INTEGER NOT NULL, DSID INTEGER NOT NULL, STYLENAME CHAR(100), ST_DISPLAY VARCHAR(32672), ST_OUTPUT VARCHAR(32672), XGROUP CHAR(1), SRNAMESORT VARCHAR(32672), SRNAMEDISP VARCHAR(32672), GVNAMESORT VARCHAR(32672), GVNAMEDISP VARCHAR(32672), OTHERDISP VARCHAR(32672), TT CHAR(1) );",
			"CREATE TABLE EVENTWITNESS ( EPER INTEGER NOT NULL, GNUM INTEGER NOT NULL, XPRIMARY CHAR(1), WSENTENCE VARCHAR(32672), TT CHAR(1), ROLE CHAR(5), DSID INTEGER NOT NULL, NAMEREC INTEGER, WITMEMO VARCHAR(32672), SEQUENCE INTEGER );",
			"CREATE TABLE SOURCECITATION ( RECNO INTEGER NOT NULL, STYPE CHAR(1), REFREC INTEGER, MAJSOURCE INTEGER, SUBSOURCE VARCHAR(32672), SNSURE CHAR(1), SSSURE CHAR(1), SDSURE CHAR(1), SPSURE CHAR(1), SFSURE CHAR(1), ISPICKED CHAR(1), SEQUENCE INTEGER, CITMEMO VARCHAR(32672), EXCLUDE CHAR(1), TT CHAR(1), DSID INTEGER NOT NULL, CITREF CHAR(30) );",
			"CREATE TABLE PERSON ( PER_NO INTEGER NOT NULL, FATHER INTEGER, MOTHER INTEGER, LAST_EDIT DATE, DSID INTEGER NOT NULL, REF_ID INTEGER, REFERENCE CHAR(12), SPOULAST INTEGER, SCBUFF CHAR(10), PBIRTH CHAR(30), PDEATH CHAR(30), SEX CHAR(1), LIVING CHAR(1), BIRTHORDER CHAR(2), MULTIBIRTH CHAR(1), ADOPTED CHAR(1), ANCE_INT CHAR(1), DESC_INT CHAR(1), RELATE INTEGER, RELATEFO INTEGER, TT CHAR(1), FLAG1 CHAR(1), FLAG2 CHAR(1), FLAG3 CHAR(1), FLAG4 CHAR(1), FLAG5 CHAR(1), FLAG6 CHAR(1), FLAG7 CHAR(1), FLAG8 CHAR(1), FLAG9 CHAR(1), FLAG10 CHAR(1), FLAG11 CHAR(1), FLAG12 CHAR(1), FLAG13 CHAR(1), FLAG14 CHAR(1), FLAG15 CHAR(1), FLAG16 CHAR(1), FLAG17 CHAR(1), FLAG18 CHAR(1), FLAG19 CHAR(1) );",

			"CREATE TABLE TIMELINELOCK ( IDLOCK INTEGER NOT NULL, TNAME CHAR(50), DSID INTEGER, TT CHAR(1), PLACES CHAR(50) );",
			"CREATE TABLE EVENT ( ETYPE INTEGER, DSID INTEGER NOT NULL, PER1SHOW CHAR(1), PER2SHOW CHAR(1), PER1 INTEGER, PER2 INTEGER, EDATE CHAR(30), PLACENUM INTEGER, EFOOT VARCHAR(32672), ENSURE CHAR(1), ESSURE CHAR(1), EDSURE CHAR(1), EPSURE CHAR(1), EFSURE CHAR(1), RECNO INTEGER NOT NULL, SENTENCE VARCHAR(32672), SRTDATE CHAR(30), TT CHAR(1), REF_ID INTEGER );",
			"CREATE TABLE NAME ( NPER INTEGER NOT NULL, ALTYPE INTEGER, ISPICKED CHAR(1), INFS CHAR(1), INFG CHAR(1), XPRIMARY CHAR(1), NSURE CHAR(1), FSURE CHAR(1), NNOTE VARCHAR(32672), RECNO INTEGER NOT NULL, SENTENCE VARCHAR(32672), NDATE CHAR(30), SRTDATE CHAR(30), DSURE CHAR(1), DSID INTEGER NOT NULL, TT CHAR(1), SRNAMESORT CHAR(70), GVNAMESORT CHAR(70), STYLEID INTEGER, SURID INTEGER, GIVID INTEGER, SRNAMEDISP CHAR(70), SNDXSURN CHAR(4), SNDXGVN CHAR(4), PBIRTH CHAR(30), PDEATH CHAR(30), REFER CHAR(30), PREF_ID INTEGER, LAST_EDIT DATE );",
			"CREATE TABLE PARENTCHILDRELATIONSHIP ( XPRIMARY CHAR(1) NOT NULL, CHILD INTEGER NOT NULL, PARENT INTEGER NOT NULL, PTYPE INTEGER NOT NULL, PNOTE VARCHAR(32672), PSURE CHAR(1), FSURE CHAR(1), RECNO INTEGER NOT NULL, TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE TABLE PLACEPARTVALUE ( RECNO INTEGER, UID INTEGER, TYPE INTEGER, ID INTEGER, TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE TABLE EXCLUDEDPAIR ( DSID INTEGER NOT NULL, PER1 INTEGER NOT NULL, PER2 INTEGER NOT NULL, TT CHAR(1) );",
			"CREATE TABLE DNA ( DSID INTEGER NOT NULL, ID_DNA INTEGER NOT NULL, ID_PERSON INTEGER NOT NULL, DNANAME CHAR(100), COMMENTS VARCHAR(32672), DESCRIPT VARCHAR(32672), RESULT VARCHAR(32672), URL VARCHAR(32672), LOGO VARCHAR(32672), TT CHAR(1), KITNUMBER CHAR(24), TYPE CHAR(1), NAMEREC INTEGER );",
			"CREATE TABLE TAGTYPE ( ISPICKED CHAR(1), DSID INTEGER NOT NULL, ACTIVE CHAR(1), ETYPENUM INTEGER NOT NULL, ORIGETYPE INTEGER, ADMIN NUMERIC(2 , 0), LDSONLY CHAR(1), ETYPENAME CHAR(20), GEDCOM_TAG CHAR(4), ISREPORT CHAR(1), TSENTENCE VARCHAR(32672), ABBREV CHAR(4), WITDISP CHAR(1), PASTTENSE CHAR(20), PRINROLE CHAR(1), WITROLE CHAR(1), MAXYEAR NUMERIC(4 , 0), MINYEAR NUMERIC(4 , 0), TT CHAR(1), REMINDERS VARCHAR(32672), PROPERTIES VARCHAR(32672), PLACE4 CHAR(50) );",
			"CREATE TABLE RESEARCHLOG ( RLTYPE CHAR(1), RLNUM INTEGER, RLPER1 INTEGER, RLPER2 INTEGER, RLGTYPE INTEGER, TASK VARCHAR(32672), RLEDITED CHAR(11), DESIGNED CHAR(11), BEGUN CHAR(11), PROGRESS CHAR(11), COMPLETED CHAR(11), PLANNED CHAR(11), EXPENSES DECIMAL(14 , 2), COMMENTS VARCHAR(32672), RLNOTE VARCHAR(32672), KEYWORDS VARCHAR(32672), DSID INTEGER NOT NULL, ID_PERSON INTEGER, ID_EVENT INTEGER, ID_SOURCE INTEGER, ID_REPOS INTEGER, TT CHAR(1), REFERENCE CHAR(30), NUM_REC NUMERIC(6 , 0), S CHAR(1), RECNO INTEGER );",
			"CREATE TABLE PLACE ( RECNO INTEGER NOT NULL, STYLEID INTEGER, DSID INTEGER NOT NULL, TT CHAR(1), STARTYEAR CHAR(4), ENDYEAR CHAR(4), COMMENT VARCHAR(32672), SHORTPLACE VARCHAR(32672) );",
			"CREATE TABLE PLACEDICTIONARY ( UID INTEGER NOT NULL, XVALUE VARCHAR(32672), SDX CHAR(4), TT CHAR(1) );",
			"CREATE TABLE REPOSITORYLINK ( RNUMBER INTEGER, MNUMBER INTEGER, REFERENCE CHAR(25), XPRIMARY CHAR(1), TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE TABLE SOURCEELEMENT ( RECNO INTEGER NOT NULL, DSID INTEGER NOT NULL, ELEMENT CHAR(30), GROUPNUM NUMERIC(3 , 0), TT CHAR(1) );",
			"CREATE TABLE FLAG ( FLAGLABEL CHAR(50), FLAGFIELD CHAR(10), FLAGVALUE CHAR(250), SEQUENCE INTEGER, DESCRIPT VARCHAR(32672), ACTIVE CHAR(1), FLAGID INTEGER NOT NULL, PROPERTY VARCHAR(32672), DSID INTEGER NOT NULL, TT CHAR(1) );",
			"CREATE TABLE NAMEPARTVALUE ( RECNO INTEGER, UID INTEGER, TYPE INTEGER, ID INTEGER, TT CHAR(1), DSID INTEGER NOT NULL );",
			"CREATE UNIQUE INDEX PARENTCHILDRELATIONSHIP__RECNO_IDX ON PARENTCHILDRELATIONSHIP (RECNO ASC);",
			"CREATE UNIQUE INDEX EVENTWITNESS_EPER_IDX ON EVENTWITNESS (EPER ASC, GNUM ASC);",
			"CREATE UNIQUE INDEX PLACE_RECNO_IDX ON PLACE (RECNO ASC);",
			"CREATE UNIQUE INDEX SOURCEELEMENT_RECNO_IDX ON SOURCEELEMENT (RECNO ASC);",
			"CREATE UNIQUE INDEX SOURCETYPE_SOURTYPE_IDX ON SOURCETYPE (RULESET ASC, SOURTYPE ASC);",
			"CREATE UNIQUE INDEX STYLE_STYLEID_IDX ON STYLE (STYLEID ASC);",
			"CREATE UNIQUE INDEX SOURCECITATION_RECNO_IDX ON SOURCECITATION (RECNO ASC);",
			"CREATE UNIQUE INDEX PLACEPARTTYPE_ID_IDX ON PLACEPARTTYPE (ID ASC);",
			"CREATE UNIQUE INDEX EVENT_RECNO_IDX ON EVENT (RECNO ASC);",
			"CREATE UNIQUE INDEX DNA_ID_DNA_IDX ON DNA (ID_DNA ASC);",
			"CREATE UNIQUE INDEX PLACEDICTIONARY_UID_IDX ON PLACEDICTIONARY (UID ASC);",
			"CREATE UNIQUE INDEX SOURCE_MAJNUM_IDX ON SOURCE (MAJNUM ASC);",
			"CREATE UNIQUE INDEX PERSON_PER_NO_IDX ON PERSON (PER_NO ASC);",
			"CREATE UNIQUE INDEX NAME_RECNO_IDX ON NAME (RECNO ASC);",
			"CREATE UNIQUE INDEX FLAG_FLAGID_IDX ON FLAG (FLAGID ASC);",
			"CREATE UNIQUE INDEX FOCUSGROUP_GROUPNUM_IDX ON FOCUSGROUP (GROUPNUM ASC);",
			"CREATE UNIQUE INDEX NAMEDICTIONARY_UID_IDX ON NAMEDICTIONARY (UID ASC);",
			"CREATE UNIQUE INDEX TAGTYPE_ETYPENUM_IDX ON TAGTYPE (ETYPENUM ASC);",
			"CREATE UNIQUE INDEX NAMEPARTTYPE_ID_IDX ON NAMEPARTTYPE (ID ASC);",
			"CREATE UNIQUE INDEX DATASET_DSID_IDX ON DATASET (DSID ASC);",
			"CREATE UNIQUE INDEX EXHIBIT_IDEXHIBIT_IDX ON EXHIBIT (IDEXHIBIT ASC);",
			"ALTER TABLE SOURCE ADD CONSTRAINT SOURCE_PK PRIMARY KEY (MAJNUM);",
			"ALTER TABLE NAME ADD CONSTRAINT NAME_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE DNA ADD CONSTRAINT DNA_PK PRIMARY KEY (ID_DNA);",
			"ALTER TABLE EVENT ADD CONSTRAINT EVENT_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE NAMEDICTIONARY ADD CONSTRAINT NAMEDICTIONARY_PK PRIMARY KEY (UID);",
			"ALTER TABLE STYLE ADD CONSTRAINT STYLE_PK PRIMARY KEY (STYLEID);",
			"ALTER TABLE PERSON ADD CONSTRAINT PERSON_PK PRIMARY KEY (PER_NO);",
			"ALTER TABLE REPOSITORY ADD CONSTRAINT REPOSITORY_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE NAMEPARTTYPE ADD CONSTRAINT NAMEPARTTYPE_PK PRIMARY KEY (ID);",
			"ALTER TABLE FOCUSGROUP ADD CONSTRAINT FOCUSGROUP_PK PRIMARY KEY (GROUPNUM);",
			"ALTER TABLE PLACE ADD CONSTRAINT PLACE_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE FLAG ADD CONSTRAINT FLAG_PK PRIMARY KEY (FLAGID);",
			"ALTER TABLE DATASET ADD CONSTRAINT DATASET_PK PRIMARY KEY (DSID);",
			"ALTER TABLE SOURCECITATION ADD CONSTRAINT SOURCECITATION_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE PARENTCHILDRELATIONSHIP ADD CONSTRAINT PARENTCHILDRELATIONSHIP__PK PRIMARY KEY (RECNO);",
			"ALTER TABLE PLACEPARTTYPE ADD CONSTRAINT PLACEPARTTYPE_PK PRIMARY KEY (ID);",
			"ALTER TABLE EXHIBIT ADD CONSTRAINT EXHIBIT_PK PRIMARY KEY (IDEXHIBIT);",
			"ALTER TABLE SOURCETYPE ADD CONSTRAINT SOURCETYPE_PK PRIMARY KEY (RULESET, SOURTYPE);",
			"ALTER TABLE TAGTYPE ADD CONSTRAINT TAGTYPE_PK PRIMARY KEY (ETYPENUM);",
			"ALTER TABLE PLACEDICTIONARY ADD CONSTRAINT PLACEDICTIONARY_PK PRIMARY KEY (UID);",
			"ALTER TABLE SOURCEELEMENT ADD CONSTRAINT SOURCEELEMENT_PK PRIMARY KEY (RECNO);",
			"ALTER TABLE EVENTWITNESS ADD CONSTRAINT EVENTWITNESS_PK PRIMARY KEY (EPER, GNUM);",
			"CREATE VIEW EVENTVIEW AS SELECT EVENT.RECNO, EVENT.ETYPE, EVENT.EDATE, EVENT.PLACENUM, EVENT.EFOOT, TAGTYPE.ETYPENAME, PLACEPARTVALUE.UID, PLACEPARTVALUE.TYPE, PLACEDICTIONARY.XVALUE, EVENT.PER1, EVENT.PER2 FROM EVENT, TAGTYPE, PLACEPARTVALUE, PLACEDICTIONARY WHERE TAGTYPE.ETYPENUM = EVENT.ETYPE AND PLACEPARTVALUE.RECNO = EVENT.PLACENUM AND PLACEDICTIONARY.UID = EVENT.PLACENUM ORDER BY EVENT.EDATE, PLACEPARTVALUE.TYPE; " };

	public CreateH2Database(String dbname, IProgressMonitor monitor) {
		this.subMonitor = SubMonitor.convert(monitor, 50);
	}

	public void run() {
		try {
			this.subMonitor.beginTask("Creating H2 Database", 50);
			this.subMonitor.subTask("Connecting");
			HreH2ConnectionPool.createNew(null);
			this.conn = HreH2ConnectionPool.getConnection();
			this.stmt = this.conn.createStatement();
			String[] arrayOfString;
			int j = (arrayOfString = this.statementArray).length;
			for (int i = 0; i < j; i++) {
				String element = arrayOfString[i];
				LOGGER.info("Executing " + element);
				this.stmt.execute(element);
			}

			this.stmt.close();
			this.conn.close();
			LOGGER.info("Finished Database creation");
		} catch (SQLException | BackingStoreException e) {
			LOGGER.severe(e.getClass() + ": " + e.getMessage());
		}
	}
}
